/*******************************************************************************
* This file has been generated by Franca's FDeployGenerator.
* Source: deployment spec 'org.genivi.commonapi.someip.deployment'
*******************************************************************************/
package org.genivi.commonapi.someip;

import java.util.List;
import java.util.ArrayList;
import org.franca.deploymodel.dsl.fDeploy.FDInterfaceInstance;
import org.franca.deploymodel.core.FDeployedProvider;

/**
 * Accessor for deployment properties for 'org.genivi.commonapi.someip.deployment' specification
 */		
public class DeploymentProviderPropertyAccessor
	extends org.genivi.commonapi.core.DeploymentProviderPropertyAccessor
{
	
	private FDeployedProvider target;

	public DeploymentProviderPropertyAccessor (FDeployedProvider target) {
		super(target);
		this.target = target;
	}
	
	public Integer getSomeIpInstanceID (FDInterfaceInstance obj) {
		return target.getInteger(obj, "SomeIpInstanceID");
	}
	
	public String getSomeIpUnicastAddress (FDInterfaceInstance obj) {
		return target.getString(obj, "SomeIpUnicastAddress");
	}
	
	public Integer getSomeIpReliableUnicastPort (FDInterfaceInstance obj) {
		return target.getInteger(obj, "SomeIpReliableUnicastPort");
	}
	
	public Integer getSomeIpUnreliableUnicastPort (FDInterfaceInstance obj) {
		return target.getInteger(obj, "SomeIpUnreliableUnicastPort");
	}
	
	public List<Integer> getSomeIpMulticastEventGroups (FDInterfaceInstance obj) {
		return target.getIntegerArray(obj, "SomeIpMulticastEventGroups");
	}
	
	public List<String> getSomeIpMulticastAddresses (FDInterfaceInstance obj) {
		return target.getStringArray(obj, "SomeIpMulticastAddresses");
	}
	
	public List<Integer> getSomeIpMulticastPorts (FDInterfaceInstance obj) {
		return target.getIntegerArray(obj, "SomeIpMulticastPorts");
	}
	
	public enum SomeIpDefaultErrorCoding {
		Header
	}
	public SomeIpDefaultErrorCoding getSomeIpDefaultErrorCoding (FDInterfaceInstance obj) {
		String e = target.getEnum(obj, "SomeIpDefaultErrorCoding");
		if (e==null) return null;
		return convertSomeIpDefaultErrorCoding(e);
	}
	private SomeIpDefaultErrorCoding convertSomeIpDefaultErrorCoding (String val) {
		if (val.equals("Header"))
			return SomeIpDefaultErrorCoding.Header;
		return null;
	}
	
	
}
